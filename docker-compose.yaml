version: '3.8'

services:
  bot:
    build:
      context: app
    container_name: telegram_bot
    environment:
      TOKEN: ${TOKEN}
      RM_HOST: ${RM_HOST}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
      RM_PORT: ${RM_PORT}
      MESSAGE_SYMBOL_LIMIT: ${MESSAGE_SYMBOL_LIMIT}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
    depends_on:
      - postgres_primary
      - postgres_replica
    restart: always
    shm_size: 1g

  postgres_primary:
    build:
      context: db
    container_name: postgres_primary
    user: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    command: |
      postgres
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/add_host.sh:/docker-entrypoint-initdb.d/add_host.sh


  postgres_replica:
    build:
      context: db_repl
    container_name: postgres_replica
    user: postgres
    ports:
      - 5433:5432
    environment:
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=postgres_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    volumes:
      - ./db_repl/add_host.sh:/docker-entrypoint-initdb.d/add_host.sh
    depends_on:
      - postgres_primary

networks:
  default:
    name: my_network